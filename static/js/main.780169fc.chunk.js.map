{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovie","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAgCeA,MA5Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACA,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,IACrC,yBAAKK,UAAU,eACX,wBAAIA,UAAU,gBAAgBL,GAC9B,wBAAIK,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,UACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAGnD,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,SC6C7CC,G,kNAtDbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAIXC,S,sBAAW,8BAAAC,EAAA,sEAEgCC,IAAMC,IAAI,6CAF1C,gBAEcJ,EAFd,EAEEK,KAAMA,KAAML,OAEnB,EAAKM,SAAS,CAACN,SAAQD,WAAU,IAJ5B,2C,kEASTQ,KAAKN,a,+BAIE,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OAEA,6BAASX,UAAU,aAChBU,EAEC,yBAAKV,UAAU,UACf,0BAAMA,UAAU,gBAAhB,cAGE,yBAAKA,UAAU,UACdW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACAb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZD,MAAOwB,EAAMxB,MACbE,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAxCRuB,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.780169fc.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./Movie.css\"\n\nfunction Movie({title, year, summary, poster, genres}){\n    return (\n    <div className=\"movie\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"genres\">\n                {genres.map((genre, index) => (\n                    <li key={index} className=\"genres__genre\">{genre}</li>\n                ))}\n            </ul>\n            <p className=\"movie__summary\">{summary.slice(0, 140)}</p>\n            \n        </div>\n    </div>\n    )\n}\n\nMovie.propTypes = {\n    id : propTypes.number.isRequired,\n    title : propTypes.string.isRequired,\n    year : propTypes.number.isRequired,\n    summary : propTypes.string.isRequired,\n    poster : propTypes.string.isRequired,\n    genres : propTypes.arrayOf(propTypes.string).isRequired\n}\n\nexport default Movie;\n\n\n\n\n// state가 필요하지 않은 컴포넌트 일 경우에는 클래스 컴포넌트일 필요가 없음","import React from 'react';\n//import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n\n  };\n\n  getMovie = async() => {\n //     const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\"); 아래와 같음\n        const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\n        this.setState({movies, isLoading:false});\n\n  }\n\n  componentDidMount(){\n    this.getMovie();\n  }\n\n\n  render(){      \n    const {isLoading, movies} = this.state;\n    return (\n\n    <section className=\"container\">\n      {isLoading \n      ? (\n        <div className=\"loader\">\n        <span className=\"loader__text\">Loading..</span>\n        </div> \n        ) : ( \n          <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie \n            key={movie.id} \n            id={movie.id} \n            year={movie.year} \n            title={movie.title} \n            summary={movie.summary} \n            poster={movie.medium_cover_image}\n            genres={movie.genres} \n            />\n          ))}\n          </div>\n        )}\n    </section>\n    );\n  }\n}\n\n\n\n\n\n\nexport default App;\n\n// 위 function App()\n// 리턴은 HTML이 들어가야 하는데, 뭔가 과정이 더 필요하기 때문에 {}을 넣고 그 안에서 뭔가 과정을 거침\n// .map 은 배열의 원소 하나씩 하나씩 리턴\n// App 클래스를 만들때 React.Component를 상속받은 이유는 state때문.\n\n\n\n///React.Component\n//   Mounting\n//     - constructor()\n//     - static getDerivedStateFromProps()\n//     - render()\n//     - componentDidMount() -> 업데이트 됐을때 호출됨\n\n//   Updating\n//     - static getDerivedStateFromProps()\n//     - shouldComponentUpdate()\n//     - render()\n//     - getSnapshotBeforeUpdate()\n//     - componentDidUpdate()\n\n\n//   Updating\n//     - componentWillUnmount()","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n//React application can render only one element!\n\n//\n\n"],"sourceRoot":""}